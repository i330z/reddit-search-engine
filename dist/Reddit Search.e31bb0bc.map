{"version":3,"sources":["redditsearch.js","index.js"],"names":["search","searchValue","sortBy","searchLimit","Promise","resolve","reject","fetch","then","res","json","data","mappedData","children","map","catch","err","searchForm","document","getElementById","searchFilter","addEventListener","e","preventDefault","value","querySelector","console","log","redditApi","result","output","forEach","post","image","preview","images","source","url","title","selftext","subreddit","score","innerHTML","showMessage","message","classname","div","createElement","className","textContent","searchContianer","insertBefore","setTimeout","remove"],"mappings":"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","file":"Reddit Search.e31bb0bc.map","sourceRoot":"..","sourcesContent":["export default{\r\n    search: function(searchValue,sortBy,searchLimit){   \r\n        return new Promise((resolve, reject) => {\r\n            fetch(`http://www.reddit.com/search.json?q=${searchValue}&sort=${sortBy}&limit=${searchLimit}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let mappedData = data.data.children.map(data => data.data)\r\n                resolve(mappedData)\r\n            })\r\n            .catch(err => reject(err))\r\n        })\r\n    }\r\n}","import redditApi from './redditsearch';\r\n\r\nconst searchForm = document.getElementById('search-form');\r\nconst searchFilter =document.getElementById('search-input');\r\n\r\nsearchForm.addEventListener('submit', e =>{\r\n    e.preventDefault();\r\n\r\n    const searchValue = searchFilter.value;\r\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n    const searchLimit = document.getElementById('limit').value;\r\n    console.log(sortBy)\r\n    console.log(searchLimit);\r\n    redditApi.search(searchValue,sortBy,searchLimit)\r\n    .then(result =>{\r\n        let output = '<div class=\"card-columns\">'\r\n        result.forEach(post => {\r\n            console.log(post)\r\n\r\n            let image = post.preview ? post.preview.images[0].source.url : './dist/reddit.jpeg';\r\n\r\n            output += `<div class=\"card\"\">\r\n            <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">${post.title}</h5>\r\n              <p class=\"card-text\">${post.selftext}</p>\r\n              <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a><hr>\r\n              <span class=\"badge badge-secondary\">Subreddit:${post.subreddit}</span>  \r\n              <span class=\"badge badge-secondary\">Score:${post.score}</span>  \r\n            </div>\r\n          </div>`\r\n        });\r\n        output += '</div>'\r\n        document.getElementById('results').innerHTML = output;\r\n    })\r\n\r\n    if(searchValue === ''){\r\n        showMessage('Enter In the Search Field','alert-danger')\r\n    }\r\n\r\n    function showMessage(message, classname){\r\n        const div = document.createElement('div');\r\n        div.className = `alert ${classname}`;\r\n        div.textContent = message;\r\n        // div.appendChild(document.createTextNode(message));\r\n\r\n        const searchContianer = document.getElementById('search-container');\r\n        const search = document.getElementById('search');\r\n\r\n        searchContianer.insertBefore(div,search);\r\n        setTimeout(() => {\r\n            document.querySelector('.alert').remove();\r\n        }, 3000);\r\n    }\r\n\r\n    \r\n})"]}